generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model usertovehicle {
  A String
  B String

  @@unique([A, B], map: "_UserToVehicle_AB_unique")
  @@index([B], map: "_UserToVehicle_B_index")
  @@map("_usertovehicle")
}

model log {
  id        String   @id @default(cuid())
  userId    String?
  action    String
  createdAt DateTime @default(now())

  @@index([userId], map: "Log_userId_fkey")
}


model SlotRequest {
 id        String   @id @default(cuid())
  userId    String
  user      user     @relation(fields: [userId], references: [id])
  vehicleId String
  vehicle   vehicle  @relation(fields: [vehicleId], references: [id])
  slotId    String?
  slot      ParkingSlot? @relation(fields: [slotId], references: [id])
  status    RequestStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([slotId], map: "SlotRequest_slotId_fkey")
  @@index([userId], map: "SlotRequest_userId_fkey")
  @@index([vehicleId], map: "SlotRequest_vehicleId_fkey")
}

model user {
  id        String    @id
  name      String
  email     String    @unique(map: "User_email_key")
  password  String
  role      user_role @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime

  SlotRequest SlotRequest[]
}

model vehicle {
  id          String              @id
  userId      String
  plateNumber String              @unique(map: "Vehicle_plateNumber_key")
  vehicleType vehicle_vehicleType
  size        vehicle_size
  attributes  Json?

  SlotRequest SlotRequest[]
}
model ParkingSlot {
  id          String      @id @default(cuid())
  slotNumber  String
  vehicleType VehicleType
  size        Size
  location    String
  status      String       @default("AVAILABLE")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  SlotRequest SlotRequest[]
}

enum parkingslot_size {
  SMALL
  MEDIUM
  LARGE
}

enum parkingslot_vehicleType {
  CAR
  MOTORCYCLE
  TRUCK
}

enum vehicle_vehicleType {
  CAR
  MOTORCYCLE
  TRUCK
}

enum parkingslot_status {
  AVAILABLE
  UNAVAILABLE
}

enum user_role {
  USER
  ADMIN
}

enum vehicle_size {
  SMALL
  MEDIUM
  LARGE
}

enum parkingslot_location {
  NORTH
  SOUTH
  EAST
  WEST
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}
enum VehicleType {
  CAR
  BIKE
  TRUCK
}

enum Size {
  SMALL
  MEDIUM
  LARGE
}
